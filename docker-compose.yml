services:
  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    env_file:
      - .env
    command: python main.py
    ports:
      - "8000:8000"
    restart: always
    volumes:
      - ./back:/app
      - /app/pycache
    extra_hosts:
      - "host.docker.internal:host-gateway"

  host_app:
    build:
      context: ./front/education-mf-root/host-app
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    restart: unless-stopped

  auth_app:
    build:
      context: ./front/education-mf-root/auth-app
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    restart: unless-stopped

  dashboard_app:
    build:
      context: ./front/education-mf-root/dashboard-app
      dockerfile: Dockerfile
    ports:
      - "5174:80"
    restart: unless-stopped

  result_app:
    build:
      context: ./front/education-mf-root/result-app
      dockerfile: Dockerfile
    ports:
      - "5175:80"
    restart: unless-stopped

  land_app:
    build:
      context: ./front/education-mf-root/land-app
      dockerfile: Dockerfile
    ports:
      - "5176:80"
    restart: unless-stopped

  postgres:
    image: postgres:17.4
    environment:
      POSTGRES_DB: ${DBNAME}
      POSTGRES_USER: ${DBUSER}
      POSTGRES_PASSWORD: ${DBPASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./postgres/init:/docker-entrypoint-initdb.d
      - ./postgres/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

networks:
  default:
    driver: bridge